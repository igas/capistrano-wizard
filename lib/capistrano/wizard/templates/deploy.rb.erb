set :application, '<%= @options[:name] %>'
set :repo_url, '<%= @options[:repo_url] %>'

# ask :branch, proc { `git rev-parse --abbrev-ref HEAD`.chomp }

set :deploy_to, '<%= @options[:deploy_to] %>'
# set :scm, :git

# set :format, :pretty
# set :log_level, :debug
# set :pty, true

# set :linked_files, %w{config/database.yml}
# set :linked_dirs, %w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system}

# set :default_env, { path: "/opt/ruby/bin:$PATH" }
# set :keep_releases, 5
<% if @options.fetch(:ruby_manager, nil) == :rvm %>
# rvm
# ===

# set :rvm_type, :user
<% if @options.fetch(:ruby_string, '').empty? %># set :rvm_ruby_version, '2.0.0-p247'<% else %>set :rvm_ruby_version, '<%= @options.fetch(:ruby_string) %>'<% end %>
# set :rvm_custom_path, '~/.myveryownrvm'<% end %><% if @options.fetch(:ruby_manager, nil) == :rbenv %>
# rbenv
# =====

# set :rbenv_type, :user
<% if @options.fetch(:ruby_string, '').empty? %># set :rbenv_ruby, '2.0.0-p247'<% else %>set :rbenv_ruby, '<%= @options.fetch(:ruby_string) %>'<% end %>
# set :rbenv_prefix, "RBENV_ROOT=#{fetch(:rbenv_path)} RBENV_VERSION=#{fetch(:rbenv_ruby)} #{fetch(:rbenv_path)}/bin/rbenv exec"
# set :rbenv_map_bins, %w{rake gem bundle ruby rails}
# set :rbenv_roles, :all<% end %><% if @options.fetch(:ruby_manager, nil) == :chruby %>
# chruby
# ======

<% if @options.fetch(:ruby_string, '').empty? %># set :chruby_ruby, 'ruby-2.0.0-p247'<% else %>set :chruby_ruby, '<%= @options.fetch(:ruby_string) %>'<% end %><% end %>

namespace :deploy do

  desc 'Restart application'
  task :restart do
    on roles(:app), in: :sequence, wait: 5 do
      # Your restart mechanism here, for example:
      # execute :touch, release_path.join('tmp/restart.txt')
    end
  end

  after :publishing, :restart

  after :restart, :clear_cache do
    on roles(:web), in: :groups, limit: 3, wait: 10 do
      # Here we can do anything such as:
      # within release_path do
      #   execute :rake, 'cache:clear'
      # end
    end
  end

end
